name: Create Other Release Assets

on:
  release:
    types:
      - published

jobs:
  aarch64_job:
    runs-on: ubuntu-22.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    strategy:
      matrix:
        include:
        - arch: aarch64
          distro: fedora_latest
          version: 41
          os: fedora
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Setup Build
        id: build
        with:
            arch: ${{ matrix.arch }}
            distro: ${{ matrix.distro }}

            githubToken: ${{ secrets.GITHUB_TOKEN }}

            # Create an artifacts directory
            setup: |
              mkdir -p "${PWD}/artifacts"

            # Mount the artifacts directory as /artifacts in the container
            dockerRunArgs: |
              --volume "${PWD}/artifacts:/artifacts"

            env: |
                osversion: ${{ matrix.version }}
                os: ${{ matrix.os }}
                targetarch: ${{ matrix.arch }}
            shell: /bin/sh

            install: |
              case "${{ matrix.distro }}" in
                fedora*)
                  dnf5 update -y
                  dnf5 install -y rpm-build make gcc gcc-c++ libdrm-devel systemd-rpm-macros glibc-devel wget git "dnf5-command(builddep)"
                  ;;
              esac

            run: |
              export "VERSION=$(grep ^VERSION Makefile | awk -F:= '{print $2}' | tr -d ' ')"
              export "RELEASE=$(grep ^RELEASE Makefile | awk -F:= '{print $2}' | tr -d ' ')"
              export "SPECIFICTARGET=github-release"
              export "EVDISOURCE=.github_evdi"
              export "OSVERSION=${osversion}"
              ci/${os}.sh
              ls -la
              mv displaylink-${VERSION}-${RELEASE}${EVDISOURCE}.src.rpm ${os}-${osversion}-displaylink-${VERSION}-${RELEASE}${EVDISOURCE}.src.rpm
              mv ${targetarch}/displaylink-${VERSION}-${RELEASE}${EVDISOURCE}.${targetarch}.rpm ${os}-${osversion}-displaylink-${VERSION}-${RELEASE}${EVDISOURCE}.${targetarch}.rpm
              chown `id -u`:`id -g` -R .
              cp *.${targetarch}.rpm /artifacts/

      - name: Get version
        run: |
          echo "VERSION=$(grep ^VERSION Makefile | awk -F:= '{print $2}' | tr -d ' ')" >> $GITHUB_ENV
      - name: Get release
        run: |
          echo "RELEASE=$(grep ^RELEASE Makefile | awk -F:= '{print $2}' | tr -d ' ')" >> $GITHUB_ENV

      - name: Upload RPM
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.version }}-displaylink-${{ env.VERSION }}-${{ env.RELEASE }}
          path: artifacts/${{ matrix.os }}-${{ matrix.version }}-displaylink-${{ env.VERSION }}-${{ env.RELEASE }}*.${{ matrix.arch }}.rpm

      - name: Upload Assets To Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: '${{ matrix.os }}-${{ matrix.version }}-displaylink-${{ env.VERSION }}-${{ env.RELEASE }}*.${{ matrix.arch }}.rpm'
          draft: false
          update_latest_release: true
          tags: true
          overwrite: true
